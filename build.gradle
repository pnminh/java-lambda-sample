import java.util.regex.Matcher

plugins {
    id "com.jfrog.artifactory" version "4.4.0"
    id 'net.researchgate.release' version '2.4.0'
}
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'
//allow gradle wrapper to download the gradle version
task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}
def artifactory_repo_url = project.hasProperty('artifactory_url') ? project.getProperty('artifactory_url') : "http://localhost:8081/artifactory"
def release_repo_key = project.hasProperty('artifactory_release_repo_key') ? project.getProperty('artifactory_release_repo_key') : "release-repo"
def snapshot_repo_key = project.hasProperty('artifactory_snapshot_repo_key') ? project.getProperty('artifactory_snapshot_repo_key') : "snapshot-repo"
def group_id = 'com.minh.aws'
def artifact_id = "$project.name"
def version_prop_file = 'gradle.properties'
def branch = project.hasProperty('branch') ? project.getProperty('branch') : 'release_aws'
def release_branch = project.hasProperty('release_branch')?project.getProperty('release_branch'):'release_aws'
def artifact_version = (branch=="release_aws"?project.property("version"):project.property("version").toString()+"-SNAPSHOT")
sourceCompatibility = 1.7
targetCompatibility = 1.7
repositories {
    mavenCentral()
}
dependencies {
    compile 'com.amazonaws:aws-lambda-java-core:1.2.0'
    testCompile 'junit:junit:4.12'
}

jar {
    baseName = "${artifact_id}"
    version = "${artifact_version}"
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
artifactory {
    contextUrl = artifactory_repo_url
    publish {
        repository {
            repoKey = branch=="release_aws"?release_repo_key:snapshot_repo_key
            username = project.hasProperty('artifactory_user') ? project.getProperty('artifactory_user') : 'admin'
            password = project.hasProperty('artifactory_pass') ? project.getProperty('artifactory_pass') : 'admin'
        }
        defaults {
            publications('mavenJava')
        }
    }
}
release {
    failOnCommitNeeded = false
    failOnPublishNeeded = false
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = false
    failOnUpdateNeeded = false
    tagTemplate = "${artifact_id}" + "." + "${artifact_version}"
    buildTasks = ['build', 'artifactoryPublish']
    versionPatterns = [
            /(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    scmAdapters = [
            net.researchgate.release.GitAdapter
    ]

    git {
        commitVersionFileOnly = true
        requireBranch = "${release_branch}"
    }

    versionPropertyFile = "${version_prop_file}"
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId "${artifact_id}"
            version "${artifact_version}"
            groupId "${group_id}"
        }
    }
}
/*
task publish(dependsOn:['clean', 'build','artifactPublish']){

}*/
publish.dependsOn 'clean'
publish.dependsOn 'build'
publish.dependsOn 'artifactoryPublish'
artifactoryPublish.mustRunAfter 'build'
build.mustRunAfter 'clean'