import java.util.regex.Matcher

plugins {
    id "com.jfrog.artifactory" version "4.4.0"
    id 'net.researchgate.release' version '2.4.0'
}
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'
//allow gradle wrapper to download the gradle version
task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}
def artifactory_repo_url = 'http://172.17.0.2:8081/artifactory'
def release_version = project.hasProperty('version') ? project.getProperty('version') : 'latest'
def group_id='com.minh.gradle'
def artifact_id='minh.gradle'
def version_prop_file='gradle.properties'
def branch = project.hasProperty('branch') ? project.getProperty('branch') : 'init'
sourceCompatibility = 1.7
targetCompatibility = 1.7
repositories {
    mavenCentral()
}
dependencies{
    compile 'com.amazonaws:aws-lambda-java-core:1.2.0'
    testCompile 'junit:junit:4.12'
}
jar{
    baseName = "${artifact_id}"
    version = "${release_version}"
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
artifactory {
    contextUrl = artifactory_repo_url
    publish {
        repository {
            repoKey = 'example-repo-local'
            username = project.hasProperty('artifactory_user') ? project.getProperty('artifactory_user') : 'admin'
            password = project.hasProperty('artifactory_pass') ? project.getProperty('artifactory_pass') : 'admin'
        }
        defaults {
            publications('mavenJava')
        }
    }
}
release {
    failOnCommitNeeded = false
    failOnPublishNeeded = false
    failOnSnapshotDependencies = false
    failOnUnversionedFiles = false
    failOnUpdateNeeded = false
    tagTemplate = "${artifact_id}" + "." + "${release_version}"
    buildTasks = ['build', 'artifactoryPublish']
    versionPatterns = [
            /(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    scmAdapters = [
            net.researchgate.release.GitAdapter
    ]

    git {
        commitVersionFileOnly = true
        requireBranch = "${branch}"
    }

    versionPropertyFile = "${version_prop_file}"
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId "${artifact_id}"
            version "${release_version}"
            groupId "${group_id}"
        }
    }
}